//////////////////////////////////////////////////////////////////////////
/// @File:
///     BaseScene.h
/// @Notes:
///     Abstract base scene class which contains
///		what a scene will consist of. 
/// @Author:
///     Haval Ahmed
/// @Copyright:
///     See attached license 
///		All rights reserved Haval Ahmed
//////////////////////////////////////////////////////////////////////////

#ifndef BASE_SCENE_H
#define BASE_SCENE_H

//////////////////////////////////////////////////////////////////////////
// Standard Libraries
//////////////////////////////////////////////////////////////////////////
#include <cstdint>

namespace ForerunnerEngine
{
	class BaseScene
	{
	public:

		//////////////////////////////////////////////////////////////////////////
		/// Constructor
		//////////////////////////////////////////////////////////////////////////
		BaseScene() {};

		//////////////////////////////////////////////////////////////////////////
		/// Virtual destructor
		//////////////////////////////////////////////////////////////////////////
		virtual ~BaseScene(void) {};

		//////////////////////////////////////////////////////////////////////////
		/// Utilties
		//////////////////////////////////////////////////////////////////////////
		virtual void update(double deltaTime)	= 0;
		virtual void render(double deltaTime)	= 0;
		virtual void loadScene(void)			= 0;
		virtual uint32_t isSceneLoaded(void)	= 0;
		virtual uint32_t isSceneComplete(void)	= 0;

	protected:

		//////////////////////////////////////////////////////////////////////////
		/// Utilties
		//////////////////////////////////////////////////////////////////////////
		virtual void unloadScene(void)							= 0;
		virtual void initializeScene(void)						= 0;
		virtual void initializeShadersAndLayouts(void)			= 0;
		virtual void initializeLighting(void)					= 0;
		virtual void initializeSceneGeometry(void)				= 0;
		virtual void initializeCamera(void)						= 0;
		virtual void initializeWorldViewProjectionMatrix(void)	= 0;
	};
}

#endif
