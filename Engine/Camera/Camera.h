/// @file Camera.h
/// @brief Defines a base camera class
/// @author Haval Ahmed (Haval-Ahmed)

#ifndef CAMERA_H
#define CAMERA_H

//////////////////////////////////////////////////////////////////////////
/// Standard Libraries
//////////////////////////////////////////////////////////////////////////
#include <cstdint>

//////////////////////////////////////////////////////////////////////////
/// Forerunner Libraries
//////////////////////////////////////////////////////////////////////////
#include "FRMath.h"

namespace ForerunnerEngine
{
    enum class CAMERA_MOVEMENT : uint32_t
    {
        FORWARD,
        BACKWARD,
        LEFT,
        RIGHT,
        UP,
        DOWN,
        JUMP,
        TOTAL_MOVEMENT
    };

    class Camera 
    {
    public:
        //////////////////////////////////////////////////////////////////////////
        /// Constructor
        //////////////////////////////////////////////////////////////////////////
        Camera();

        //////////////////////////////////////////////////////////////////////////
        /// Virtual Destructor
        //////////////////////////////////////////////////////////////////////////
        virtual ~Camera(void) {};

        //////////////////////////////////////////////////////////////////////////
        /// Utilitiies
        //////////////////////////////////////////////////////////////////////////
        virtual glm::mat4 getViewMatrix();
        virtual void updateCameraAngle(float yawOffset, float pitchOffset)              = 0;
        virtual void updateCameraZoomLevel(float yOffset)                               = 0;
        virtual void updateCameraPosition(CAMERA_MOVEMENT direction, double deltaTime)  = 0;

        //////////////////////////////////////////////////////////////////////////
        /// Setters
        //////////////////////////////////////////////////////////////////////////
        virtual void setCameraSpeed(float cameraSpeed);
        virtual void setCameraSensitivity(float cameraSensitivity);

        //////////////////////////////////////////////////////////////////////////
        /// Getters
        //////////////////////////////////////////////////////////////////////////
        virtual float getCameraSpeed(void);
        virtual float getCameraSensitivity(void);

    protected:

        //////////////////////////////////////////////////////////////////////////
        /// Utilitiies
        //////////////////////////////////////////////////////////////////////////
        void updateViewMatrix(void);

    protected:

        //////////////////////////////////////////////////////////////////////////
        /// Camera Defaults
        //////////////////////////////////////////////////////////////////////////
        const float YAW_DEFAULT         = -90.0f;
        const float PITCH_DEFAULT       = 0.0;
        const float SPEED_DEFAULT       = 5.0f;
        const float SENSITIVITY_DEFAULT = 0.1f; 
        const float ZOOM_DEFAULT        = 45.0f;

        //////////////////////////////////////////////////////////////////////////
        /// Camera Vectors
        //////////////////////////////////////////////////////////////////////////
        glm::vec3 m_cameraPosition;
        glm::vec3 m_worldUpDirection;
        glm::vec3 m_frontVector;
        glm::vec3 m_rightVector;
        glm::vec3 m_upVector;

        //////////////////////////////////////////////////////////////////////////
        /// Camera Angles
        //////////////////////////////////////////////////////////////////////////
        float m_cameraYaw;
        float m_cameraPitch;

        //////////////////////////////////////////////////////////////////////////
        /// Camera Options
        //////////////////////////////////////////////////////////////////////////
        float m_cameraSpeed;
        float m_cameraSensitivity;
        float m_cameraZoomLevel;
    };
}

#endif

