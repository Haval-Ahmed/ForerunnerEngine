//////////////////////////////////////////////////////////////////////////
/// @File:
///     XInput.h
/// @Notes:
///     Win32 XInput Class
/// @Copyright:
///     All rights reserved Haval Ahmed
//////////////////////////////////////////////////////////////////////////

#ifndef XINPUT_CONTROLLER_H
#define XINPUT_CONTROLLER_H

//////////////////////////////////////////////////////////////////////////
// Standard Libraries
//////////////////////////////////////////////////////////////////////////
#include <cstdint>

//////////////////////////////////////////////////////////////////////////
// Windows Libraries
//////////////////////////////////////////////////////////////////////////
#include <XInput.h>

namespace ForerunnerEngine
{
    class XInputController
    {
    public:
        //////////////////////////////////////////////////////////////////////////
        /// Constructor
        //////////////////////////////////////////////////////////////////////////
        XInputController();

        //////////////////////////////////////////////////////////////////////////
        /// Virtual destructor
        //////////////////////////////////////////////////////////////////////////
        virtual ~XInputController();

        //////////////////////////////////////////////////////////////////////////
        /// Utilites 
        //////////////////////////////////////////////////////////////////////////
        virtual void getControllerState(void);

        //////////////////////////////////////////////////////////////////////////
        /// Setters 
        //////////////////////////////////////////////////////////////////////////
        virtual void setVibration(uint8_t leftMotorPercentage, uint8_t rightMotorPercentage);

        //////////////////////////////////////////////////////////////////////////
        /// Getters 
        //////////////////////////////////////////////////////////////////////////
        virtual void getLeftStickValue(void);
        virtual void getRightStickValue(void);
        virtual void getDPADLeft(void);
        virtual void getDPADRight(void);
        virtual void getDPADUp(void);
        virtual void getDPADDown(void);
        virtual void getBatteryConnectionType(void);
        virtual void getBatteryLevel(void);

    private:

        //////////////////////////////////////////////////////////////////////////
        // Class Variables
        //////////////////////////////////////////////////////////////////////////
        uint32_t leftThumbStickDeadzone;
        uint32_t rightThumbStickDeadzone;
        uint32_t triggerAnalogDeadzone;
        uint32_t numberOfControllersConnected;

        //////////////////////////////////////////////////////////////////////////
        // XInput Variables
        //////////////////////////////////////////////////////////////////////////
        XINPUT_GAMEPAD xinputControllers[4];

    };
}

#endif
